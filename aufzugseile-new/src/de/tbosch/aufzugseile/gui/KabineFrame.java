package de.tbosch.aufzugseile.gui;

import java.text.DecimalFormat;
import java.text.ParseException;

import javax.swing.ImageIcon;

import de.tbosch.aufzugseile.gui.aufzug.Kabine;
import de.tbosch.commons.Helper;
import de.tbosch.aufzugseile.gui.utils.Constants;
/**
 * The options frame for the kabine.
 * 
 * @author Thomas Bosch (tbosch@gmx.de)
 */
public class KabineFrame extends javax.swing.JFrame {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8509266976829081448L;

	/** The kabine itself. */
	private Kabine kabine;
	
	/** The main frame. */
	private MainFrame mainFrame;
	
	/** The decimal formats without a point (int). */
	private DecimalFormat df_nopoint;
	
	/**
	 * Creates new form KabineFrame.
	 * 
	 * @param mainFrame the main frame
	 * @param kabine The kabine itself
	 */
	public KabineFrame(Kabine kabine, MainFrame mainFrame) {
		df_nopoint = new DecimalFormat();
		df_nopoint.setMaximumFractionDigits(0);
		df_nopoint.setGroupingUsed(false);
		initComponents();
		this.kabine = kabine;
		this.mainFrame = mainFrame;
		mainFrame.setEnabled(false);
		masseFormattedTextField.setText(df_nopoint.format(kabine.getMass()));
		zuladungFormattedTextField.setText(df_nopoint.format(kabine.getZuladung()));
		durchschnittFormattedTextField.setText(df_nopoint.format(kabine.getDurchschnitt() * 100));
		profilFormattedTextField.setText(df_nopoint.format(kabine.getProfil() * 100));
    	
		ImageIcon imageIcon = new ImageIcon(Helper.getFileURL(Constants.PROGRAM_ICON));
		setIconImage(imageIcon.getImage());
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc=" Generated Code
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        errorLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        masseFormattedTextField = new javax.swing.JFormattedTextField(df_nopoint);
        zuladungFormattedTextField = new javax.swing.JFormattedTextField(df_nopoint);
        durchschnittFormattedTextField = new javax.swing.JFormattedTextField(df_nopoint);
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        profilFormattedTextField = new javax.swing.JFormattedTextField(df_nopoint);
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Optionen");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        cancelButton.setText("Abbrechen");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        titleLabel.setText("Kabine: Optionen");

        jLabel1.setText("Eigenmasse:");

        jLabel2.setText("kg");

        errorLabel.setForeground(new java.awt.Color(255, 0, 0));

        jLabel3.setText("maximale Zuladung:");

        jLabel4.setText("kg");

        jLabel5.setText("%");

        jLabel6.setText("durchschn. Zuladung:");

        jLabel7.setText("%");

        jLabel8.setText("Erdgeschossfahrten:");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(errorLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 213, Short.MAX_VALUE)
                        .add(okButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cancelButton))
                    .add(titleLabel)
                    .add(layout.createSequentialGroup()
                        .add(7, 7, 7)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel1)
                            .add(jLabel3)
                            .add(jLabel6)
                            .add(jLabel8))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, profilFormattedTextField)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, durchschnittFormattedTextField, 0, 0, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, masseFormattedTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, zuladungFormattedTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel4)
                            .add(jLabel2)
                            .add(jLabel5)
                            .add(jLabel7))
                        .add(142, 142, 142)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(titleLabel)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(masseFormattedTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(jLabel4)
                    .add(zuladungFormattedTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(durchschnittFormattedTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel5)
                    .add(jLabel6))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(profilFormattedTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel7)
                    .add(jLabel8))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(cancelButton)
                        .add(okButton))
                    .add(errorLabel))
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
    	mainFrame.setEnabled(true);
    	dispose();
    }//GEN-LAST:event_formWindowClosing

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
		mainFrame.setEnabled(true);
		dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
    	int mass = 0;
		int zuladung = 0;
		int durchschnitt = 0;
		int profil = 0;
		try {
			mass = df_nopoint.parse(masseFormattedTextField.getText()).intValue();
			zuladung = df_nopoint.parse(zuladungFormattedTextField.getText()).intValue();
			durchschnitt = df_nopoint.parse(durchschnittFormattedTextField.getText()).intValue();
			profil = df_nopoint.parse(profilFormattedTextField.getText()).intValue();
		}
		catch (ParseException e) {
			// auto-corrected by FormattedTextField
		}
    	
		if (mass > 0 && zuladung > 0) {
			// set all parameters
			kabine.setMass(mass);
			kabine.setZuladung(zuladung);
			kabine.setDurchschnitt((double)durchschnitt / 100);
			kabine.setProfil((double)profil / 100);
			mainFrame.setZuladung(zuladung);
			mainFrame.setDurchschnitt((double)durchschnitt / 100);
			mainFrame.setProfil((double)profil / 100);
			mainFrame.setEnabled(true);
			mainFrame.parameterChanged();
			dispose();
		}
		else {
			errorLabel.setText("Keine negative Masse erlaubt!");
		}
    }//GEN-LAST:event_okButtonActionPerformed
	
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JFormattedTextField durchschnittFormattedTextField;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JFormattedTextField masseFormattedTextField;
    private javax.swing.JButton okButton;
    private javax.swing.JFormattedTextField profilFormattedTextField;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JFormattedTextField zuladungFormattedTextField;
    // End of variables declaration//GEN-END:variables

}
